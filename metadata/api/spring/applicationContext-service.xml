<?xml version="1.0" encoding="UTF-8"?>

<!-- Application context definition for OpenMRS business services. -->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans 
           http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-2.5.xsd
           http://www.springframework.org/schema/util
           http://www.springframework.org/schema/util/spring-util-2.0.xsd">

	<!--  **************************  Transactional Interceptor  *************************  -->
	<!--  	
		Looks for advisors (TransactionAttributeSourceAdvisor) in the context, and automatically 
		creates proxy objects which are the transactional wrappers.  This object looks at every 
		class defined below to see whether it contains the Transactional annonation attribute. 
		NOTE:  I believe this needs to be defined at the top of the file (or before all Transactional
		components) because it needs to do processing on objects after they are initialized. 
	-->
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"/>
	<!-- 
		AOP advisor: Contains TransactionAttributeSource which tells Spring what to do (advice) 
		and when to do it (pointcut).  Pointcuts, in our case, are defined by the use of the 
		Transactional annotation attribute.
	-->
	<bean class="org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor">
		<property name="transactionInterceptor" ref="transactionInterceptor"/>
	</bean>
	<!-- 
		AOP transaction advice: Intercepts method call and wraps it with a transaction.  The 
		transactionAttributeSource is what reads/remembers all Transactional attributes of a given 
		method or class (which is done during initialization)
	-->
	<bean id="transactionInterceptor" class="org.springframework.transaction.interceptor.TransactionInterceptor">
		<property name="transactionManager" ref="transactionManager"/>
		<property name="transactionAttributeSource">
			<bean class="org.springframework.transaction.annotation.AnnotationTransactionAttributeSource"/>
		</property>
	</bean>

	<!--  **************************  EVENT LISTENERS ***************************** -->
	<bean id="openmrsEventListeners" class="org.openmrs.api.EventListeners">
		<property name="globalPropertyListeners">
			<list value-type="org.openmrs.api.GlobalPropertyListener" merge="true">
			</list>
		</property>
	</bean>
	
	<!--  **************************  SERVICE CONTEXT CONFIGURATION  *************************  -->

	<!-- Single application context (our own context, not Spring's ApplicationContext -->
	<bean id="serviceContext" class="org.openmrs.api.context.ServiceContext" factory-method="getInstance">
        <property name="patientService"><ref bean="patientService"/></property>
        <property name="personService"><ref bean="personService"/></property>
        <property name="conceptService"><ref bean="conceptService"/></property>
        <property name="userService"><ref bean="userService"/></property>
        <property name="obsService"><ref bean="obsService"/></property>
        <property name="encounterService"><ref bean="encounterService"/></property>
        <property name="locationService"><ref bean="locationService"/></property>
        <property name="orderService"><ref bean="orderService"/></property>
        <property name="formService"><ref bean="formService"/></property>
        <property name="administrationService"><ref bean="adminService"/></property>
        <property name="programWorkflowService"><ref bean="programWorkflowService"/></property>
        <property name="patientSetService"><ref bean="patientSetService"/></property>
        <property name="cohortService"><ref bean="cohortService"/></property>
        <property name="messageService"><ref bean="messageService"/></property>
        
        <property name="schedulerService"><ref bean="schedulerService"/></property>
        <property name="alertService"><ref bean="alertService"/></property>
        <property name="reportService"><ref bean="reportService"/></property>
        <property name="reportObjectService"><ref bean="reportObjectService"/></property>
        <property name="dataSetService"><ref bean="dataSetService"/></property>
        <property name="hl7Service"><ref bean="hL7Service"/></property>
        <property name="ardenService"><ref bean="ardenService"/></property>
        <property name="logicService"><ref bean="logicService"/></property>
        <property name="messageSourceService"><ref bean="messageSourceService"/></property>
	</bean>	
	
	<bean id="context" class="org.openmrs.api.context.Context">
        <property name="serviceContext"><ref bean="serviceContext"/></property>
        <property name="contextDAO"><ref bean="contextDAO"/></property>
	</bean>
	
	<!--  **************************  DATA ACCESS OBJECTS  *************************  -->		

	<bean id="contextDAO" class="org.openmrs.api.db.hibernate.HibernateContextDAO">
		<property name="sessionFactory"><ref bean="sessionFactory"/></property>	
	</bean>
	
	<bean id="patientDAO" class="org.openmrs.api.db.hibernate.HibernatePatientDAO">
		<property name="sessionFactory"><ref bean="sessionFactory"/></property>	
	</bean>
	<bean id="personDAO" class="org.openmrs.api.db.hibernate.HibernatePersonDAO">
		<property name="sessionFactory"><ref bean="sessionFactory"/></property>	
	</bean>
	<bean id="conceptDAO" class="org.openmrs.api.db.hibernate.HibernateConceptDAO">
		<property name="sessionFactory"><ref bean="sessionFactory"/></property>	
	</bean>
	<bean id="userDAO" class="org.openmrs.api.db.hibernate.HibernateUserDAO">
		<property name="sessionFactory"><ref bean="sessionFactory"/></property>	
	</bean>
	<bean id="obsDAO" class="org.openmrs.api.db.hibernate.HibernateObsDAO">
		<property name="sessionFactory"><ref bean="sessionFactory"/></property>	
	</bean>
	<bean id="encounterDAO" class="org.openmrs.api.db.hibernate.HibernateEncounterDAO">
		<property name="sessionFactory"><ref bean="sessionFactory"/></property>	
	</bean>
	<bean id="locationDAO" class="org.openmrs.api.db.hibernate.HibernateLocationDAO">
		<property name="sessionFactory"><ref bean="sessionFactory"/></property>	
	</bean>
	<bean id="orderDAO" class="org.openmrs.api.db.hibernate.HibernateOrderDAO">
		<property name="sessionFactory"><ref bean="sessionFactory"/></property>	
	</bean>
	<bean id="formDAO" class="org.openmrs.api.db.hibernate.HibernateFormDAO">
		<property name="sessionFactory"><ref bean="sessionFactory"/></property>	
	</bean>
	<bean id="adminDAO" class="org.openmrs.api.db.hibernate.HibernateAdministrationDAO">
		<property name="sessionFactory"><ref bean="sessionFactory"/></property>	
	</bean>
	<bean id="noteDAO" class="org.openmrs.api.db.hibernate.HibernateNoteDAO">
		<property name="sessionFactory"><ref bean="sessionFactory"/></property>	
	</bean>
	<bean id="programWorkflowDAO" class="org.openmrs.api.db.hibernate.HibernateProgramWorkflowDAO">
		<property name="sessionFactory"><ref bean="sessionFactory"/></property>	
	</bean>
	<bean id="templateDAO" class="org.openmrs.api.db.hibernate.HibernateTemplateDAO">
		<property name="sessionFactory"><ref bean="sessionFactory"/></property>	
	</bean>
	<bean id="patientSetDAO" class="org.openmrs.api.db.hibernate.HibernatePatientSetDAO">
		<property name="sessionFactory"><ref bean="sessionFactory"/></property>	
	</bean>
	<bean id="cohortDAO" class="org.openmrs.api.db.hibernate.HibernateCohortDAO">
		<property name="sessionFactory"><ref bean="sessionFactory"/></property>	
	</bean>
	
	
	<bean id="schedulerDAO" class="org.openmrs.scheduler.db.hibernate.HibernateSchedulerDAO">
		<property name="sessionFactory"><ref bean="sessionFactory"/></property>	
	</bean>
	<bean id="alertDAO" class="org.openmrs.notification.db.hibernate.HibernateAlertDAO">
		<property name="sessionFactory"><ref bean="sessionFactory"/></property>	
	</bean>
	<bean id="reportDAO" class="org.openmrs.report.db.hibernate.HibernateReportDAO">
		<property name="sessionFactory"><ref bean="sessionFactory"/></property>	
	</bean>
	<bean id="reportObjectDAO" class="org.openmrs.reporting.db.hibernate.HibernateReportObjectDAO">
		<property name="sessionFactory"><ref bean="sessionFactory"/></property>	
	</bean>
	<bean id="hL7DAO" class="org.openmrs.hl7.db.hibernate.HibernateHL7DAO">
		<property name="sessionFactory"><ref bean="sessionFactory"/></property>	
	</bean>

	<!-- *************************** LOGIC SERVICE ************************* -->
	
	<bean id="logicObsDAO" class="org.openmrs.logic.db.hibernate.HibernateLogicObsDAO">
		<property name="sessionFactory"><ref bean="sessionFactory"/></property>	
	</bean>
	<bean id="logicPersonDAO" class="org.openmrs.logic.db.hibernate.HibernateLogicPersonDAO">
		<property name="sessionFactory"><ref bean="sessionFactory"/></property>	
	</bean>
	<bean id="logicEncounterDAO" class="org.openmrs.logic.db.hibernate.HibernateLogicEncounterDAO">
		<property name="sessionFactory"><ref bean="sessionFactory"/></property>	
	</bean>
	<bean id="logicObsDataSource" class="org.openmrs.logic.datasource.ObsDataSource">
		<property name="logicObsDAO"><ref bean="logicObsDAO"></ref></property>
	</bean>
	<bean id="logicPersonDataSource" class="org.openmrs.logic.datasource.PersonDataSource">
		<property name="logicPersonDAO"><ref bean="logicPersonDAO"></ref></property>
	</bean>
	<bean id="logicEncounterDataSource" class="org.openmrs.logic.datasource.EncounterDataSource">
		<property name="logicEncounterDAO"><ref bean="logicEncounterDAO"></ref></property>
	</bean>
	<bean id="logicProgramDataSource" class="org.openmrs.logic.datasource.ProgramDataSource">
	</bean>

	<!--  **************************  SCHEDULER SERVICE  *************************  -->
	<!-- 
		Note that we have circular dependency between service and context object.
		There's nothing we could do about this.  
	-->
	<bean id="patientServiceTarget" class="org.openmrs.api.impl.PatientServiceImpl">
		<property name="patientDAO"><ref bean="patientDAO"/></property>	
		<property name="identifierValidators">
			<map>
				<entry>
					<key><value>org.openmrs.patient.impl.LuhnIdentifierValidator</value></key>
					<bean class="org.openmrs.patient.impl.LuhnIdentifierValidator"/>
				</entry>
				<entry>
					<key><value>org.openmrs.patient.impl.VerhoeffIdentifierValidator</value></key>
					<bean class="org.openmrs.patient.impl.VerhoeffIdentifierValidator"/>
				</entry>
			</map>
		</property>
	</bean>
	<bean id="personServiceTarget" class="org.openmrs.api.impl.PersonServiceImpl">
		<property name="personDAO"><ref bean="personDAO"/></property>	
	</bean>
	<bean id="conceptServiceTarget" class="org.openmrs.api.impl.ConceptServiceImpl">
		<property name="conceptDAO"><ref bean="conceptDAO"/></property>	
	</bean>
	<bean id="userServiceTarget" class="org.openmrs.api.impl.UserServiceImpl">
		<property name="userDAO"><ref bean="userDAO"/></property>	
	</bean>
	<bean id="obsServiceTarget" class="org.openmrs.api.impl.ObsServiceImpl">
		<property name="obsDAO"><ref bean="obsDAO"/></property>	
        <property name="handlers">
            <map>
                <entry>
                    <key><value>ImageHandler</value></key>
                    <bean class="org.openmrs.obs.handler.ImageHandler"/>
                </entry>
                <entry>
                    <key><value>TextHandler</value></key>
                    <bean class="org.openmrs.obs.handler.TextHandler"/>
                </entry>
            </map>
        </property>
	</bean>
	<bean id="encounterServiceTarget" class="org.openmrs.api.impl.EncounterServiceImpl">
		<property name="encounterDAO"><ref bean="encounterDAO"/></property>	
	</bean>
	<bean id="locationServiceTarget" class="org.openmrs.api.impl.LocationServiceImpl">
		<property name="locationDAO"><ref bean="locationDAO"/></property>	
	</bean>
	<bean id="orderServiceTarget" class="org.openmrs.api.impl.OrderServiceImpl">
		<property name="orderDAO"><ref bean="orderDAO"/></property>
	</bean>
	<bean id="formServiceTarget" class="org.openmrs.api.impl.FormServiceImpl">
		<property name="formDAO"><ref bean="formDAO"/></property>	
	</bean>
	<bean id="adminServiceTarget" class="org.openmrs.api.impl.AdministrationServiceImpl">
		<property name="administrationDAO"><ref bean="adminDAO"/></property>	
		<property name="eventListeners"><ref bean="openmrsEventListeners"/></property>
	</bean>
	<bean id="programWorkflowServiceTarget" class="org.openmrs.api.impl.ProgramWorkflowServiceImpl">
		<property name="programWorkflowDAO"><ref bean="programWorkflowDAO"/></property>	
	</bean>
	<bean id="patientSetServiceTarget" class="org.openmrs.api.impl.PatientSetServiceImpl">
		<property name="patientSetDAO"><ref bean="patientSetDAO"/></property>	
	</bean>
	
	
	<!-- Cohort Service setup -->
	<bean id="cohortServiceTarget" class="org.openmrs.api.impl.CohortServiceImpl">
		<property name="cohortDAO"><ref bean="cohortDAO"/></property>
		<property name="cohortDefinitionProviders">
			<map>
				<entry>
					<key><value>org.openmrs.reporting.PatientSearch</value></key>
					<bean class="org.openmrs.cohort.impl.PatientSearchCohortDefinitionProvider"/>
				</entry>
				<entry>
					<key><value>org.openmrs.cohort.StaticCohortDefinition</value></key>
					<bean class="org.openmrs.cohort.impl.StaticCohortDefinitionProvider"/>
				</entry>
			</map>
		</property>
	</bean>
	<!-- /Cohort Service setup -->
	
	<bean id="schedulerServiceTarget" class="org.openmrs.scheduler.timer.TimerSchedulerServiceImpl">
		<property name="schedulerDAO"><ref bean="schedulerDAO"/></property>	
	</bean>
	<bean id="alertServiceTarget" class="org.openmrs.notification.impl.AlertServiceImpl">
		<property name="alertDAO"><ref bean="alertDAO"/></property>	
	</bean>
	<bean id="messageServiceTarget" class="org.openmrs.notification.impl.MessageServiceImpl">
		<property name="templateDAO"><ref bean="templateDAO"/></property>	
	</bean>
	<bean id="reportObjectServiceTarget" class="org.openmrs.reporting.impl.ReportObjectServiceImpl">
		<property name="reportObjectDAO"><ref bean="reportObjectDAO"/></property>	
	</bean>
	
	
	<!-- ReportService setup -->
	<bean id="reportServiceTarget" class="org.openmrs.report.impl.ReportServiceImpl">
		<property name="reportDAO"><ref bean="reportDAO"/></property>	
		<property name="renderers">
			<map>
				<entry>
					<key><value>org.openmrs.report.impl.TsvReportRenderer</value></key>
					<bean class="org.openmrs.report.impl.TsvReportRenderer"/>
				</entry>
				<entry>
					<key><value>org.openmrs.report.impl.CsvReportRenderer</value></key>
					<bean class="org.openmrs.report.impl.CsvReportRenderer"/>
				</entry>
			</map>
		</property>
	</bean>
	<!-- /ReportService setup -->
	
	
	<!-- Data Set Service Setup -->
	<bean id="dataSetServiceTarget" class="org.openmrs.report.impl.DataSetServiceImpl">
		<property name="providers">
			<list>
				<bean class="org.openmrs.report.CohortDataSetProvider"/>
				<bean class="org.openmrs.report.RowPerObsDataSetProvider"/>
				<bean class="org.openmrs.report.RowPerProgramEnrollmentDataSetProvider"/>
			</list>
		</property>
	</bean>
	<!-- /Data Set Service setup -->
	
	
	<bean id="hL7ServiceTarget" class="org.openmrs.hl7.impl.HL7ServiceImpl">
		<property name="HL7DAO"><ref bean="hL7DAO"/></property>	
	</bean>
	<bean id="ardenServiceTarget" class="org.openmrs.arden.impl.ArdenServiceImpl">
	</bean>
	
	<!--  Logic Service and Logic Data source setup -->
	<bean id="logicServiceTarget" class="org.openmrs.logic.impl.LogicServiceImpl">
		<property name="logicDataSources">
			<map>
				<entry key="encounter"><ref bean="logicEncounterDataSource" /></entry>
				<entry key="obs"><ref bean="logicObsDataSource" /></entry>
				<entry key="person"><ref bean="logicPersonDataSource" /></entry>
				<entry key="program"><ref bean="logicProgramDataSource" /></entry>
			</map>
		</property>
	</bean>
	<!-- /Logic Service and Logic Data Source setup -->
	
	<bean id="messageSourceServiceTarget" class="org.openmrs.messagesource.impl.MessageSourceServiceImpl">
		<property name="activeMessageSource"><ref bean="mutableResourceBundleMessageSource"/>
		</property>
	</bean>
	
	<bean id="mutableResourceBundleMessageSource" class="org.openmrs.messagesource.impl.MutableResourceBundleMessageSource">
		<property name="basenames">
			<!--  ABKTODO: Ugh. Presumes to be in a web application... -->
			<list>
				<value>/WEB-INF/custom_messages</value>
				<value>/WEB-INF/module_messages</value>
				<value>/WEB-INF/messages</value>
			</list>
		</property>
		<property name="useCodeAsDefaultMessage"><value>true</value></property>
		<property name="cacheSeconds" value="1" />
	</bean>
	<!-- /Logic Service and Logic Data Source setup -->
	
	<bean id="patientService" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager"><ref local="transactionManager"/></property>
		<property name="target"><ref local="patientServiceTarget"/></property>
		<property name="preInterceptors">
			<list>
				<ref local="authorizationInterceptor"/>
				<ref local="loggingInterceptor"/>
			</list>
		</property>
		<property name="transactionAttributeSource">
			<bean class="org.springframework.transaction.annotation.AnnotationTransactionAttributeSource"/>
		</property>
	</bean>
	<bean id="personService" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager"><ref local="transactionManager"/></property>
		<property name="target"><ref local="personServiceTarget"/></property>
		<property name="preInterceptors">
			<list>
				<ref local="authorizationInterceptor"/>
				<ref local="loggingInterceptor"/>
			</list>
		</property>
		<property name="transactionAttributeSource">
			<bean class="org.springframework.transaction.annotation.AnnotationTransactionAttributeSource"/>
		</property>
	</bean>
	<bean id="conceptService" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager"><ref local="transactionManager"/></property>
		<property name="target"><ref local="conceptServiceTarget"/></property>
		<property name="preInterceptors">
			<list>
				<ref local="authorizationInterceptor"/>
				<ref local="loggingInterceptor"/>
			</list>
		</property>
		<property name="transactionAttributeSource">
			<bean class="org.springframework.transaction.annotation.AnnotationTransactionAttributeSource"/>
		</property>
	</bean>
	<bean id="userService" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager"><ref local="transactionManager"/></property>
		<property name="target"><ref local="userServiceTarget"/></property>
		<property name="preInterceptors">
			<list>
				<ref local="authorizationInterceptor"/>
				<ref local="loggingInterceptor"/>
			</list>
		</property>
		<property name="transactionAttributeSource">
			<bean class="org.springframework.transaction.annotation.AnnotationTransactionAttributeSource"/>
		</property>
	</bean>
	<bean id="obsService" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager"><ref local="transactionManager"/></property>
		<property name="target"><ref local="obsServiceTarget"/></property>
		<property name="preInterceptors">
			<list>
				<ref local="authorizationInterceptor"/>
				<ref local="loggingInterceptor"/>
			</list>
		</property>
		<property name="transactionAttributeSource">
			<bean class="org.springframework.transaction.annotation.AnnotationTransactionAttributeSource"/>
		</property>
	</bean>
	<bean id="encounterService" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager"><ref local="transactionManager"/></property>
		<property name="target"><ref local="encounterServiceTarget"/></property>
		<property name="preInterceptors">
			<list>
				<ref local="authorizationInterceptor"/>
				<ref local="loggingInterceptor"/>
			</list>
		</property>
		<property name="transactionAttributeSource">
			<bean class="org.springframework.transaction.annotation.AnnotationTransactionAttributeSource"/>
		</property>
	</bean>
	<bean id="locationService" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager"><ref local="transactionManager"/></property>
		<property name="target"><ref local="locationServiceTarget"/></property>
		<property name="preInterceptors">
			<list>
				<ref local="authorizationInterceptor"/>
				<ref local="loggingInterceptor"/>
			</list>
		</property>
		<property name="transactionAttributeSource">
			<bean class="org.springframework.transaction.annotation.AnnotationTransactionAttributeSource"/>
		</property>
	</bean>
	<bean id="orderService" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager"><ref local="transactionManager"/></property>
		<property name="target"><ref local="orderServiceTarget"/></property>
		<property name="preInterceptors">
			<list>
				<ref local="authorizationInterceptor"/>
				<ref local="loggingInterceptor"/>
			</list>
		</property>
		<property name="transactionAttributeSource">
			<bean class="org.springframework.transaction.annotation.AnnotationTransactionAttributeSource"/>
		</property>
	</bean>
	<bean id="formService" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager"><ref local="transactionManager"/></property>
		<property name="target"><ref local="formServiceTarget"/></property>
		<property name="preInterceptors">
			<list>
				<ref local="authorizationInterceptor"/>
				<ref local="loggingInterceptor"/>
			</list>
		</property>
		<property name="transactionAttributeSource">
			<bean class="org.springframework.transaction.annotation.AnnotationTransactionAttributeSource"/>
		</property>
	</bean>
	<bean id="adminService" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager"><ref local="transactionManager"/></property>
		<property name="target"><ref local="adminServiceTarget"/></property>
		<property name="preInterceptors">
			<list>
				<ref local="authorizationInterceptor"/>
				<ref local="loggingInterceptor"/>
			</list>
		</property>
		<property name="transactionAttributeSource">
			<bean class="org.springframework.transaction.annotation.AnnotationTransactionAttributeSource"/>
		</property>
	</bean>
	<bean id="programWorkflowService" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager"><ref local="transactionManager"/></property>
		<property name="target"><ref local="programWorkflowServiceTarget"/></property>
		<property name="preInterceptors">
			<list>
				<ref local="authorizationInterceptor"/>
				<ref local="loggingInterceptor"/>
			</list>
		</property>
		<property name="transactionAttributeSource">
			<bean class="org.springframework.transaction.annotation.AnnotationTransactionAttributeSource"/>
		</property>
	</bean>
	<bean id="messageService" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager"><ref local="transactionManager"/></property>
		<property name="target"><ref local="messageServiceTarget"/></property>
		<property name="preInterceptors">
			<list>
				<ref local="authorizationInterceptor"/>
				<ref local="loggingInterceptor"/>
			</list>
		</property>
		<property name="transactionAttributeSource">
			<bean class="org.springframework.transaction.annotation.AnnotationTransactionAttributeSource"/>
		</property>
	</bean>
	<bean id="patientSetService" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager"><ref local="transactionManager"/></property>
		<property name="target"><ref local="patientSetServiceTarget"/></property>
		<property name="preInterceptors">
			<list>
				<ref local="authorizationInterceptor"/>
				<ref local="loggingInterceptor"/>
			</list>
		</property>
		<property name="transactionAttributeSource">
			<bean class="org.springframework.transaction.annotation.AnnotationTransactionAttributeSource"/>
		</property>
	</bean>
	<bean id="cohortService" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager"><ref local="transactionManager"/></property>
		<property name="target"><ref local="cohortServiceTarget"/></property>
		<property name="preInterceptors">
			<list>
				<ref local="authorizationInterceptor"/>
				<ref local="loggingInterceptor"/>
			</list>
		</property>
		<property name="transactionAttributeSource">
			<bean class="org.springframework.transaction.annotation.AnnotationTransactionAttributeSource"/>
		</property>
	</bean>
	
	
	<bean id="schedulerService" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager"><ref local="transactionManager"/></property>
		<property name="target"><ref local="schedulerServiceTarget"/></property>
		<property name="preInterceptors">
			<list>
				<ref local="authorizationInterceptor"/>
				<ref local="loggingInterceptor"/>
			</list>
		</property>
		<property name="transactionAttributeSource">
			<bean class="org.springframework.transaction.annotation.AnnotationTransactionAttributeSource"/>
		</property>
	</bean>
	<bean id="alertService" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager"><ref local="transactionManager"/></property>
		<property name="target"><ref local="alertServiceTarget"/></property>
		<property name="preInterceptors">
			<list>
				<ref local="authorizationInterceptor"/>
				<ref local="loggingInterceptor"/>
			</list>
		</property>
		<property name="transactionAttributeSource">
			<bean class="org.springframework.transaction.annotation.AnnotationTransactionAttributeSource"/>
		</property>
	</bean>
	<bean id="reportService" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager"><ref local="transactionManager"/></property>
		<property name="target"><ref local="reportServiceTarget"/></property>
		<property name="preInterceptors">
			<list>
				<ref local="authorizationInterceptor"/>
				<ref local="loggingInterceptor"/>
			</list>
		</property>
		<property name="transactionAttributeSource">
			<bean class="org.springframework.transaction.annotation.AnnotationTransactionAttributeSource"/>
		</property>
	</bean>
	<bean id="reportObjectService" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager"><ref local="transactionManager"/></property>
		<property name="target"><ref local="reportObjectServiceTarget"/></property>
		<property name="preInterceptors">
			<list>
				<ref local="authorizationInterceptor"/>
				<ref local="loggingInterceptor"/>
			</list>
		</property>
		<property name="transactionAttributeSource">
			<bean class="org.springframework.transaction.annotation.AnnotationTransactionAttributeSource"/>
		</property>
	</bean>
	<bean id="dataSetService" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager"><ref local="transactionManager"/></property>
		<property name="target"><ref local="dataSetServiceTarget"/></property>
		<property name="preInterceptors">
			<list>
				<ref local="authorizationInterceptor"/>
				<ref local="loggingInterceptor"/>
			</list>
		</property>
		<property name="transactionAttributeSource">
			<bean class="org.springframework.transaction.annotation.AnnotationTransactionAttributeSource"/>
		</property>
	</bean>
	<bean id="hL7Service" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager"><ref local="transactionManager"/></property>
		<property name="target"><ref local="hL7ServiceTarget"/></property>
		<property name="preInterceptors">
			<list>
				<ref local="authorizationInterceptor"/>
				<ref local="loggingInterceptor"/>
			</list>
		</property>
		<property name="transactionAttributeSource">
			<bean class="org.springframework.transaction.annotation.AnnotationTransactionAttributeSource"/>
		</property>
	</bean>
	<bean id="ardenService" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager"><ref local="transactionManager"/></property>
		<property name="target"><ref local="ardenServiceTarget"/></property>
		<property name="preInterceptors">
			<list>
				<ref local="authorizationInterceptor"/>
				<ref local="loggingInterceptor"/>
			</list>
		</property>
		<property name="transactionAttributeSource">
			<bean class="org.springframework.transaction.annotation.AnnotationTransactionAttributeSource"/>
		</property>
	</bean>
	<bean id="logicService" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager"><ref local="transactionManager"/></property>
		<property name="target"><ref local="logicServiceTarget"/></property>
		<property name="preInterceptors">
			<list>
				<ref local="authorizationInterceptor"/>
				<ref local="loggingInterceptor"/>
			</list>
		</property>
		<property name="transactionAttributeSource">
			<bean class="org.springframework.transaction.annotation.AnnotationTransactionAttributeSource"/>
		</property>
	</bean>
	
	<bean id="messageSourceService" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager"><ref local="transactionManager"/></property>
		<property name="target"><ref local="messageSourceServiceTarget"/></property>
		<property name="preInterceptors">
			<list>
				<ref local="authorizationInterceptor"/>
				<ref local="loggingInterceptor"/>
			</list>
		</property>
		<property name="transactionAttributeSource">
			<bean class="org.springframework.transaction.annotation.AnnotationTransactionAttributeSource"/>
		</property>
	</bean>
	
	<!--
		Scheduler service bean pool.
	--><!--
	<bean id="schedulerServicePool" class="org.springframework.aop.target.CommonsPoolTargetSource">
		<property name="targetBeanName"><value>schedulerServiceTarget</value></property>
		<property name="maxSize"><value>10</value></property>
	</bean>
	--><!-- 
		Scheduler service 
	--><!--
	<bean id="schedulerService" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="targetSource"><ref local="schedulerServicePool"/></property>
	</bean>
	-->

	<!--  **************************  AUTHORIZATION INTERCEPTOR  *************************  -->
	<!--
		This as an interceptor (AOP advisor) that is set within every service proxy and executed
		before the transactional proxy.  
	-->
	<bean id="authorizationInterceptor" class="org.openmrs.aop.AuthorizationAdvice"/>

	<!--  **************************  LOGGING INTERCEPTOR  *************************  -->
	<!--
		This as an AOP "around" advisor that prints logging messages 
	-->
	<bean id="loggingInterceptor" class="org.openmrs.aop.LoggingAdvice"/>


	<!--  **************************  SESSION FACTORY  *************************  -->
	
	<util:list id="moduleTestingMappingJarLocations">
		
	</util:list>
	
	<bean id="mappingJarResources" class="org.springframework.beans.factory.config.ListFactoryBean" parent="moduleTestingMappingJarLocations">
		<property name="sourceList">
			<list merge="true">
			
			</list>
		</property>
	</bean>
	
	<bean id="sessionFactory" class="org.openmrs.api.db.hibernate.HibernateSessionFactoryBean">
		<property name="configLocations">
			<list>
				<value>classpath:hibernate.cfg.xml</value>
			</list>
		</property>
		<property name="mappingJarLocations">
			<ref bean="mappingJarResources" />
		</property>
		<!--  default properties must be set in the hibernate.default.properties -->
	</bean>

	<!--  **************************  TRANSACTION MANAGER CONFIGURATION  *************************  -->

	<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory"><ref local="sessionFactory"/></property>
	</bean>


	<!--  ******************************  MESSAGE SERVICES  ****************************** -->
	
	<!-- Messaging Service -->
	<!--
    <bean id="messageService" class="org.openmrs.notification.impl.MessageServiceImpl">
        <property name="daoContext">
        	<ref bean="daoContext"/>
        </property>

        <property name="messagePreparator">
			<bean id="mailMessagePreparator" class="org.openmrs.notification.mail.velocity.VelocityMessagePreparator"/>
		</property>        

        <property name="messageSender">
			<bean id="mailMessageSender" class="org.openmrs.notification.mail.MailMessageSender">
				<property name="mailSession">
					<bean id="mailSession" class="org.springframework.jndi.JndiObjectFactoryBean">
					    <property name="jndiName"><value>java:comp/env/mail/OpenmrsMailSession</value></property>
					</bean>
				</property>
			</bean> 		
		</property>
    </bean>   
	-->		


	<!--  **************************  REPORT OBJECT FACTORY CONFIGURATION  *************************  -->
	<!-- Configuration for reporting module - sets up the report object factory and admin interface -->

	<bean id="patientCharacteristicFilterModule" class="org.openmrs.reporting.ReportObjectFactoryModule">
		<property name="name"><value>PatientCharacteristicFilter</value></property>
		<property name="displayName"><value>Patient Characteristic Filter</value></property>
		<property name="className"><value>org.openmrs.reporting.PatientCharacteristicFilter</value></property>
		<property name="type"><value>Patient Filter</value></property>
		<property name="validatorClass"><value>org.openmrs.reporting.PatientCharacteristicFilterValidator</value></property>
	</bean>
	
	<bean id="numericObsPatientFilterModule" class="org.openmrs.reporting.ReportObjectFactoryModule">
		<property name="name"><value>NumericObsPatientFilter</value></property>
		<property name="displayName"><value>Numeric Observation Patient Filter</value></property>
		<property name="className"><value>org.openmrs.reporting.NumericObsPatientFilter</value></property>
		<property name="type"><value>Patient Filter</value></property>
		<property name="validatorClass"><value>org.openmrs.reporting.NumericObsPatientFilterValidator</value></property>
	</bean>

	<bean id="shortDescriptionProducerModule" class="org.openmrs.reporting.ReportObjectFactoryModule">
		<property name="name"><value>ShortDescriptionProducer</value></property>
		<property name="displayName"><value>Short Description Producer</value></property>
		<property name="className"><value>org.openmrs.reporting.ShortDescriptionProducer</value></property>
		<property name="type"><value>Patient Data Producer</value></property>
		<property name="validatorClass"><value>org.openmrs.reporting.ShortDescriptionProducerValidator</value></property>
	</bean>

	<bean class="org.openmrs.validator.ValidateUtil">
		<property name="validators">
			<list>
				<bean class="org.openmrs.validator.DrugOrderValidator"/>
				<bean class="org.openmrs.validator.OrderValidator"/>
			</list>
		</property>
	</bean>
</beans>